export declare const tokens: {
    bitcoin: {
        eth: {
            tokens: {
                type: string;
                coin: string;
                network: string;
                name: string;
                tokenContractAddress: string;
                decimalPlaces: number;
            }[];
        };
        ofc: {
            tokens: ({
                type: string;
                coin: string;
                decimalPlaces: number;
                name: string;
                backingCoin: string;
                isFiat: boolean;
            } | {
                type: string;
                coin: string;
                decimalPlaces: number;
                name: string;
                backingCoin: string;
                isFiat?: undefined;
            })[];
        };
    };
    testnet: {
        eth: {
            tokens: {
                type: string;
                coin: string;
                network: string;
                tokenContractAddress: string;
                decimalPlaces: number;
                name: string;
            }[];
        };
        ofc: {
            tokens: ({
                type: string;
                coin: string;
                decimalPlaces: number;
                name: string;
                backingCoin: string;
                isFiat: boolean;
            } | {
                type: string;
                coin: string;
                decimalPlaces: number;
                name: string;
                backingCoin: string;
                isFiat?: undefined;
            })[];
        };
    };
};
export declare const mainnetTokens: {};
export declare const testnetTokens: {};
export declare const defaults: {
    maxFee: number;
    maxFeeRate: number;
    minFeeRate: number;
    fallbackFeeRate: number;
    minOutputSize: number;
    minInstantFeeRate: number;
    bitgoEthAddress: string;
};
export declare const supportedCrossChainRecoveries: {
    btc: string[];
    bch: string[];
    ltc: string[];
    bsv: string[];
};
export declare const krsProviders: {
    keyternal: {
        feeType: string;
        feeAmount: number;
        supportedCoins: string[];
        feeAddresses: {
            btc: string;
        };
    };
    bitgoKRSv2: {
        feeType: string;
        feeAmount: number;
        supportedCoins: string[];
    };
    dai: {
        feeType: string;
        feeAmount: number;
        supportedCoins: string[];
    };
};
export declare const bitcoinAverageBaseUrl = "https://apiv2.bitcoinaverage.com/indices/local/ticker/";
export declare const defaultConstants: (env: any) => any;
