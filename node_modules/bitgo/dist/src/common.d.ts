export declare const Environments: {
    prod: {
        uri: string;
        networks: {
            btc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        btgExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    rmgProd: {
        uri: string;
        networks: {
            btc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        btgExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    staging: {
        uri: string;
        networks: {
            btc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        btgExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    rmgStaging: {
        uri: string;
        networks: {
            btc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        btgExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    test: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    rmgTest: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    dev: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    latest: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    rmgLatest: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    rmgDev: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    local: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    localNonSecure: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    mock: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    rmgLocal: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    rmglocalNonSecure: {
        uri: string;
        networks: {
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        ltcExplorerBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
    custom: {
        uri: string;
        networks: {
            btc: any;
            tbtc: any;
        };
        network: string;
        ethNetwork: string;
        rmgNetwork: string;
        signingAddress: string;
        serverXpub: string;
        smartBitApiBaseUrl: string;
        bchExplorerBaseUrl: string;
        btgExplorerBaseUrl: string;
        ltcExplorerBaseUrl: string;
        etherscanBaseUrl: string;
        zecExplorerBaseUrl: string;
        dashExplorerBaseUrl: string;
        stellarFederationServerUrl: string;
    };
};
export declare function setNetwork(network: any): void;
export declare function getNetwork(): string;
export declare function getRmgNetwork(): string;
export declare function setRmgNetwork(network: any): void;
/**
 * Helper function to validate the input parameters to an SDK method.
 * Only validates for strings - if parameter is different, check that manually
 *
 * @param params {Object} dictionary of parameter key-value pairs
 * @param expectedParams {string[]} list of expected string parameters
 * @param optionalParams {string[]} list of optional string parameters
 * @param optionalCallback {Function} if callback provided, must be a function
 * @returns {boolean} true if validated, throws with reason otherwise
 */
export declare function validateParams(params: any, expectedParams: any, optionalParams?: any[], optionalCallback?: any): boolean;
