declare const Ofc: any;
interface OfcTokenConfig {
    type: string;
    coin: string;
    decimalPlaces: number;
    name: string;
    backingCoin: string;
    isFiat: boolean;
}
declare class OFCToken extends Ofc {
    readonly tokenConfig: OfcTokenConfig;
    constructor(tokenConfig: any);
    readonly coin: string;
    readonly decimalPlaces: number;
    readonly name: string;
    readonly backingCoin: string;
    readonly isFiat: boolean;
    getChain(): any;
    getFullName(): string;
    getBaseFactor(): string;
    /**
     * Flag for sending value of 0
     * @returns {boolean} True if okay to send 0 value, false otherwise
     */
    valuelessTransferAllowed(): boolean;
    static generateToken(config: any): typeof OFCToken;
    /**
     * Assemble keychain and half-sign prebuilt transaction
     * @param params
     * - txPrebuild
     * - prv
     * @returns {{txHex}}
     */
    signTransaction(params: any): {
        halfSigned: {
            payload: any;
            signature: any;
        };
    };
}
