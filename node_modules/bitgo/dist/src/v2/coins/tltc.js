"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Ltc = require('./ltc');
var bitcoin = require("bitgo-utxo-lib");
var Tltc = /** @class */ (function (_super) {
    __extends(Tltc, _super);
    function Tltc() {
        var _this = 
        // TODO: move to bitgo-utxo-lib (BG-6821)
        _super.call(this, {
            magic: 0xd9b4bef9,
            messagePrefix: '\x19Litecoin Signed Message:\n',
            bip32: {
                public: 0x0488b21e,
                private: 0x0488ade4
            },
            bech32: 'tltc',
            pubKeyHash: 0x6f,
            scriptHash: 0x3a,
            wif: 0xb0,
            dustThreshold: 0,
            dustSoftThreshold: 100000,
            feePerKb: 100000,
            coin: 'ltc'
        }) || this;
        _this.altScriptHash = bitcoin.networks.testnet.scriptHash;
        // support alt destinations on test
        _this.supportAltScriptDestination = false;
        return _this;
    }
    Tltc.prototype.getChain = function () {
        return 'tltc';
    };
    Tltc.prototype.getFullName = function () {
        return 'Testnet Litecoin';
    };
    return Tltc;
}(Ltc));
module.exports = Tltc;
//# sourceMappingURL=tltc.js.map