"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * Testnet XRP
 *
 * @format
 */
var Xrp = require('./xrp');
var Txrp = /** @class */ (function (_super) {
    __extends(Txrp, _super);
    function Txrp() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Identifier for the blockchain which supports this coin
     */
    Txrp.prototype.getChain = function () {
        return 'txrp';
    };
    /**
     * URL of a well-known, public facing (non-bitgo) rippled instance which can be used for recovery
     */
    Txrp.prototype.getRippledUrl = function () {
        return 'https://s.altnet.rippletest.net:51234';
    };
    /**
     * Complete human-readable name of this coin
     */
    Txrp.prototype.getFullName = function () {
        return 'Testnet Ripple';
    };
    return Txrp;
}(Xrp));
module.exports = Txrp;
//# sourceMappingURL=txrp.js.map