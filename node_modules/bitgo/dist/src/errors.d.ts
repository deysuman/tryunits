export declare class BitGoJsError extends Error {
    constructor(message: any);
}
export declare class TlsConfigurationError extends BitGoJsError {
    constructor(message?: any);
}
export declare class NodeEnvironmentError extends BitGoJsError {
    constructor(message?: any);
}
export declare class UnsupportedCoinError extends BitGoJsError {
    constructor(coin: any);
}
export declare class AddressTypeChainMismatchError extends BitGoJsError {
    constructor(addressType: any, chain: any);
}
export declare class P2shP2wshUnsupportedError extends BitGoJsError {
    constructor(message: any);
}
export declare class P2wshUnsupportedError extends BitGoJsError {
    constructor(message?: any);
}
export declare class UnsupportedAddressTypeError extends BitGoJsError {
    constructor(message?: any);
}
export declare class InvalidAddressError extends BitGoJsError {
    constructor(message?: any);
}
export declare class InvalidAddressVerificationObjectPropertyError extends BitGoJsError {
    constructor(message?: any);
}
export declare class UnexpectedAddressError extends BitGoJsError {
    constructor(message?: any);
}
export declare class InvalidAddressDerivationPropertyError extends BitGoJsError {
    constructor(message?: any);
}
export declare class WalletRecoveryUnsupported extends BitGoJsError {
    constructor(message?: any);
}
export declare class MethodNotImplementedError extends BitGoJsError {
    constructor(message?: any);
}
